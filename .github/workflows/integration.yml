name: Integration testing

on:
  merge_group:
  pull_request:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  basic:
    strategy:
      matrix:
        node: [ 18, 20, 21 ]
        react: [ 16, 17, 18 ]
    name: Basic (Node ${{ matrix.node }}, React ${{ matrix.react }})
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      NPM_REGISTRY_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: Setup packages
        run: pnpm install

      - name: Run tests
        env:
          REACT_VERSION: ${{ matrix.react }}
        run: |
          cd spec/main-suite
          npm run integration:prepare
          npm run integration:all
          npm run integration:check

      - name: Expose artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Perftool Reports (Node ${{ matrix.node }}, React ${{ matrix.react }})
          path: spec/main-suite/test-result/*

  npm:
    name: Project using NPM
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      NPM_REGISTRY_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
      - name: Setup packages
        run: pnpm install

      - name: Prepare
        run: |
          cd spec/main-suite
          npm run integration:prepare

      - name: Install via NPM
        run: |
          cd spec/main-suite
          rm -r node_modules
          npm install

      - name: Run perftool
        run: |
          cd spec/main-suite
          npm run integration:npm

  bad_ts-node:
    name: Project with different TS-node version
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      NPM_REGISTRY_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
      - name: Setup packages
        run: pnpm install

      - name: Prepare
        run: |
          cd spec/main-suite
          pnpm run integration:prepare

      - name: Install bad ts-node version
        run: |
          cd spec/main-suite
          pnpm add ts-node@9.1.1

      - name: Run perftool
        run: |
          cd spec/main-suite
          pnpm run integration:unchanged

  bad_typescript:
    name: Project with different typescript version
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      NPM_REGISTRY_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
      - name: Setup packages
        run: pnpm install

      - name: Prepare
        run: |
          cd spec/main-suite
          pnpm run integration:prepare

      - name: Install bad ts-node version
        run: |
          cd spec/main-suite
          pnpm add typescript@4.0.8

      - name: Run perftool
        run: |
          cd spec/main-suite
          pnpm run integration:unchanged

  collaborative_mode:
    strategy:
      matrix:
        node: [ 18, 20, 21 ]
    name: Ð¡ollaborative mode (Node ${{ matrix.node }})
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      NPM_REGISTRY_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          path: current
      - uses: actions/checkout@v4
        with:
          path: baseline

      - uses: pnpm/action-setup@v2
        with:
          package_json_file: 'current/package.json'
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
          cache-dependency-path: 'current/pnpm-lock.yaml'

      - name: Prepare baseline
        run: |
          cd baseline
          pnpm install
          cd spec/main-suite
          pnpm run integration:prepare

      - name: Prepare current
        run: |
          cd current
          pnpm install
          cd spec/main-suite
          pnpm run integration:prepare

      - name: Run perftool
        run: |
          cd current/spec/main-suite
          npm run integration:collaborative:unchanged
          npm run integration:collaborative:degradation
          npm run integration:check

      - name: Expose artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Perftool Reports, collaborative (Node ${{ matrix.node }})
          path: current/spec/main-suite/test-result/*
